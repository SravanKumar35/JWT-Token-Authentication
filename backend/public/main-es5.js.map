{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/login/login.component.ts","webpack:///src/app/login/login.component.html","webpack:///src/app/main-desk/main-desk.component.ts","webpack:///src/app/main-desk/main-desk.component.html","webpack:///src/app/myservice.service.ts","webpack:///src/app/register/register.component.ts","webpack:///src/app/register/register.component.html","webpack:///src/app/user-dashboard/user-dashboard.component.ts","webpack:///src/app/user-dashboard/user-dashboard.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","redirectTo","pathMatch","component","children","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","LoginComponent","_router","_activatedRoute","_myservice","loginForm","email","required","password","controlName","get","invalid","touched","navigate","relativeTo","console","log","value","valid","login","subscribe","data","localStorage","setItem","toString","error","moveToRegister","MainDeskComponent","MyserviceService","_http","body","post","observe","params","append","getItem","providedIn","RegisterComponent","successMessage","myForm","name","cnfpass","passValidator","controls","valueChanges","x","updateValueAndValidity","control","undefined","cnfpassValue","passControl","root","passValue","isError","submitRegister","register","moveToLogin","UserDashboardComponent","username","getUserName","removeItem","logout","environment","production","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { MainDeskComponent } from './main-desk/main-desk.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { RegisterComponent } from './register/register.component';\r\nimport { UserDashboardComponent } from './user-dashboard/user-dashboard.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', redirectTo: 'main', pathMatch: 'full' },\r\n  {\r\n    path: 'main', component: MainDeskComponent, children:\r\n      [\r\n        {path: '', redirectTo: 'login', pathMatch: 'full'},\r\n        { path: 'login', component: LoginComponent },\r\n        { path: 'register', component: RegisterComponent }\r\n      ]\r\n  },\r\n  {path: 'dash' , component: UserDashboardComponent}\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  title = 'App';\r\n}\r\n","<router-outlet></router-outlet>\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { RegisterComponent } from './register/register.component';\r\nimport { MainDeskComponent } from './main-desk/main-desk.component';\r\nimport { UserDashboardComponent } from './user-dashboard/user-dashboard.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\r\nimport { MatButtonModule } from '@angular/material/button';\r\n\r\n\r\nimport { FormsModule,  ReactiveFormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { MyserviceService } from './myservice.service';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    LoginComponent,\r\n    RegisterComponent,\r\n    MainDeskComponent,\r\n    UserDashboardComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    MatInputModule,\r\n    MatSnackBarModule,\r\n    MatButtonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    HttpClientModule\r\n  ],\r\n  providers: [MyserviceService],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { MyserviceService } from '../myservice.service';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss'],\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  loginForm: FormGroup;\r\n  constructor(\r\n    private _router: Router,\r\n    private _activatedRoute: ActivatedRoute,\r\n    private _myservice: MyserviceService\r\n  ) {\r\n    this.loginForm = new FormGroup({\r\n      email: new FormControl(null, Validators.required),\r\n      password: new FormControl(null, Validators.required),\r\n    });\r\n  }\r\n\r\n  ngOnInit() {}\r\n\r\n  isValid(controlName) {\r\n    return (\r\n      this.loginForm.get(controlName).invalid &&\r\n      this.loginForm.get(controlName).touched\r\n    );\r\n  }\r\n\r\n  moveToRegister() {\r\n    this._router.navigate(['../register'], {\r\n      relativeTo: this._activatedRoute,\r\n    });\r\n  }\r\n\r\n  login() {\r\n    console.log(this.loginForm.value);\r\n    if (this.loginForm.valid) {\r\n      this._myservice.login(this.loginForm.value).subscribe(\r\n        (data) => {\r\n          console.log(data);\r\n          localStorage.setItem('token', data.toString());\r\n          this._router.navigate(['../dash'])\r\n        },\r\n        (error) => 'invalid Login'\r\n      );\r\n    }\r\n  }\r\n}\r\n","<div class=\"formcontainer\">\r\n  <div class=\"formbody\">\r\n      <form style=\"width:100%;\" [formGroup]=\"loginForm\">\r\n          <div class=\"header\">Welcome</div>\r\n          <div>\r\n              <mat-form-field style=\"width:100%;\">\r\n                  <input type=\"email\" formControlName=\"email\" matInput placeholder=\"Username\">\r\n              </mat-form-field>\r\n              <span *ngIf=\"isValid('email')\">Username cannot be blank</span>\r\n          </div>\r\n          <div>\r\n              <mat-form-field style=\"width:100%;\">\r\n                  <input type=\"password\" formControlName=\"password\" matInput placeholder=\"Password\">\r\n              </mat-form-field>\r\n              <span *ngIf=\"isValid('password')\">Password cannot be blank</span>\r\n          </div>\r\n          <div style=\"margin-top:40px;\">\r\n              <button class=\"form-btn\" (click)=\"login()\" >Sign In</button>\r\n          </div>\r\n      </form>\r\n  </div>\r\n\r\n  <div>\r\n      <div style=\"width: 290px; padding: 20px;\">\r\n          <button class=\"form-btn-hollow\" (click)=\"moveToRegister()\" >Register</button>\r\n      </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-main-desk',\r\n  templateUrl: './main-desk.component.html',\r\n  styleUrls: ['./main-desk.component.scss']\r\n})\r\nexport class MainDeskComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n  <div class=\"header\">\r\n    <div class=\"headerLogo\">Travelling World</div>\r\n  </div>\r\n\r\n  <div class=\"formarea\">\r\n    <router-outlet></router-outlet>\r\n  </div>\r\n</div>\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class MyserviceService {\r\n\r\n  constructor(private _http: HttpClient) { }\r\n\r\n  submitRegister(body: any){\r\n    return this._http.post('http://localhost:3000/users/register', body,{\r\n      observe: 'body'\r\n    })\r\n  }\r\n\r\n  login(body: any){\r\n    return this._http.post('http://localhost:3000/users/login', body,{\r\n      observe: 'body'\r\n    })\r\n  }\r\n\r\n  getUserName(){\r\n    return this._http.get('http://localhost:3000/users/username', {\r\n      observe: 'body',\r\n      params: new HttpParams().append('token', localStorage.getItem('token'))\r\n    })\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {\r\n  FormGroup,\r\n  FormControl,\r\n  Validators,\r\n  AbstractControl,\r\n} from '@angular/forms';\r\nimport { MyserviceService } from '../myservice.service';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.scss'],\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n  myForm: FormGroup;\r\n  successMessage: String = '';\r\n  constructor(\r\n    private _myservice: MyserviceService,\r\n    private _router: Router,\r\n    private _activatedRoute: ActivatedRoute\r\n  ) {\r\n    this.myForm = new FormGroup({\r\n      email: new FormControl(null, Validators.email),\r\n      name: new FormControl(null, Validators.required),\r\n      password: new FormControl(null, Validators.required),\r\n      cnfpass: new FormControl(null, this.passValidator),\r\n    });\r\n\r\n    this.myForm.controls.password.valueChanges.subscribe((x) =>\r\n      this.myForm.controls.cnfpass.updateValueAndValidity()\r\n    );\r\n  }\r\n\r\n  ngOnInit(): void {}\r\n\r\n  isValid(controlName) {\r\n    return (\r\n      this.myForm.get(controlName).invalid &&\r\n      this.myForm.get(controlName).touched\r\n    );\r\n  }\r\n\r\n  passValidator(control: AbstractControl) {\r\n    if (control && (control.value !== null || control.value !== undefined)) {\r\n      const cnfpassValue = control.value;\r\n\r\n      const passControl = control.root.get('password');\r\n      if (passControl) {\r\n        const passValue = passControl.value;\r\n        if (passValue !== cnfpassValue || passValue === '') {\r\n          return {\r\n            isError: true,\r\n          };\r\n        }\r\n      }\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  register() {\r\n    console.log(this.myForm.value);\r\n\r\n    if (this.myForm.valid) {\r\n      this._myservice.submitRegister(this.myForm.value).subscribe(\r\n        (data) => (this.successMessage = 'Registration Success'),\r\n        (error) => (this.successMessage = 'Some Error')\r\n      );\r\n    }\r\n  }\r\n\r\n  moveToLogin() {\r\n    this._router.navigate(['../login'], { relativeTo: this._activatedRoute });\r\n  }\r\n}\r\n","<div class=\"formcontainer\">\r\n  <div class=\"formbody\">\r\n      <form style=\"width:100%;\" [formGroup]=\"myForm\">\r\n          <div class=\"header\">Register</div>\r\n          <div>\r\n              <mat-form-field style=\"width:100%;\">\r\n                  <input type=\"text\" formControlName=\"email\" matInput placeholder=\"Email\" id=\"email\">\r\n              </mat-form-field>\r\n              <span *ngIf=\"isValid('email')\">Entered email is invalid</span>\r\n          </div>\r\n          <div>\r\n              <mat-form-field style=\"width:100%;\">\r\n                  <input type=\"text\" formControlName=\"name\" matInput placeholder=\"Username\" id=\"user\">\r\n              </mat-form-field>\r\n              <span *ngIf=\"isValid('name')\">Username is required</span>\r\n          </div>\r\n          <div>\r\n              <mat-form-field style=\"width:100%;\">\r\n                  <input type=\"password\" formControlName=\"password\" matInput placeholder=\"Password\" id=\"pass\">\r\n              </mat-form-field>\r\n              <span *ngIf=\"isValid('password')\">Password is a mandatory field</span>\r\n          </div>\r\n          <div>\r\n              <mat-form-field style=\"width:100%;\">\r\n                  <input type=\"password\" formControlName=\"cnfpass\" matInput placeholder=\"Re-enter Password\" id=\"cnfpass\">\r\n              </mat-form-field>\r\n              <span *ngIf=\"isValid('cnfpass')\">Password and confirm password should match</span>\r\n          </div>\r\n          <div style=\"margin-top:20px;\">\r\n              <button mat-button class=\"form-btn\" (click)=\"register()\" >Register</button>\r\n          </div>\r\n\r\n\r\n          <div style=\"text-align: center;\">\r\n              {{successMessage}}\r\n          </div>\r\n      </form>\r\n  </div>\r\n\r\n  <div>\r\n      <div style=\"width: 290px; padding: 20px;\">\r\n          <button class=\"form-btn-hollow\" (click)=\"moveToLogin()\" >Login</button>\r\n      </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { MyserviceService } from '../myservice.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-user-dashboard',\r\n  templateUrl: './user-dashboard.component.html',\r\n  styleUrls: ['./user-dashboard.component.scss']\r\n})\r\nexport class UserDashboardComponent implements OnInit {\r\n\r\n  username= '';\r\n  constructor(private _myservice: MyserviceService, private _router: Router) {\r\n    if(localStorage.getItem('token')==null){\r\n      this._router.navigate(['/main/login'])\r\n    }\r\n\r\n    this._myservice.getUserName().subscribe(\r\n      data => this.username = data.toString(),\r\n      error => this._router.navigate(['/main/login'])\r\n    )\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  logout(){\r\n    localStorage.removeItem('token')\r\n    this._router.navigate(['/main/login'])\r\n\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n  <div class=\"headerbar\">\r\n    <span>Travelling World</span>\r\n  </div>\r\n  <div class=\"boom\">\r\n    <h1>Hello {{username}}</h1> <h2>you have successfully logged in using JWT.</h2>\r\n\r\n    <button mat-raised-button color=\"primary\" (click)=\"logout()\" >Logout</button>\r\n  </div>\r\n</div>\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"]}