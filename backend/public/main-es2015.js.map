{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/main-desk/main-desk.component.ts","./src/app/main-desk/main-desk.component.html","./src/app/myservice.service.ts","./src/app/register/register.component.ts","./src/app/register/register.component.html","./src/app/user-dashboard/user-dashboard.component.ts","./src/app/user-dashboard/user-dashboard.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { MainDeskComponent } from './main-desk/main-desk.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { RegisterComponent } from './register/register.component';\r\nimport { UserDashboardComponent } from './user-dashboard/user-dashboard.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', redirectTo: 'main', pathMatch: 'full' },\r\n  {\r\n    path: 'main', component: MainDeskComponent, children:\r\n      [\r\n        {path: '', redirectTo: 'login', pathMatch: 'full'},\r\n        { path: 'login', component: LoginComponent },\r\n        { path: 'register', component: RegisterComponent }\r\n      ]\r\n  },\r\n  {path: 'dash' , component: UserDashboardComponent}\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  title = 'App';\r\n}\r\n","<router-outlet></router-outlet>\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { RegisterComponent } from './register/register.component';\r\nimport { MainDeskComponent } from './main-desk/main-desk.component';\r\nimport { UserDashboardComponent } from './user-dashboard/user-dashboard.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\r\nimport { MatButtonModule } from '@angular/material/button';\r\n\r\n\r\nimport { FormsModule,  ReactiveFormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { MyserviceService } from './myservice.service';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    LoginComponent,\r\n    RegisterComponent,\r\n    MainDeskComponent,\r\n    UserDashboardComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    MatInputModule,\r\n    MatSnackBarModule,\r\n    MatButtonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    HttpClientModule\r\n  ],\r\n  providers: [MyserviceService],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { MyserviceService } from '../myservice.service';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss'],\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  loginForm: FormGroup;\r\n  constructor(\r\n    private _router: Router,\r\n    private _activatedRoute: ActivatedRoute,\r\n    private _myservice: MyserviceService\r\n  ) {\r\n    this.loginForm = new FormGroup({\r\n      email: new FormControl(null, Validators.required),\r\n      password: new FormControl(null, Validators.required),\r\n    });\r\n  }\r\n\r\n  ngOnInit() {}\r\n\r\n  isValid(controlName) {\r\n    return (\r\n      this.loginForm.get(controlName).invalid &&\r\n      this.loginForm.get(controlName).touched\r\n    );\r\n  }\r\n\r\n  moveToRegister() {\r\n    this._router.navigate(['../register'], {\r\n      relativeTo: this._activatedRoute,\r\n    });\r\n  }\r\n\r\n  login() {\r\n    console.log(this.loginForm.value);\r\n    if (this.loginForm.valid) {\r\n      this._myservice.login(this.loginForm.value).subscribe(\r\n        (data) => {\r\n          console.log(data);\r\n          localStorage.setItem('token', data.toString());\r\n          this._router.navigate(['../dash'])\r\n        },\r\n        (error) => 'invalid Login'\r\n      );\r\n    }\r\n  }\r\n}\r\n","<div class=\"formcontainer\">\r\n  <div class=\"formbody\">\r\n      <form style=\"width:100%;\" [formGroup]=\"loginForm\">\r\n          <div class=\"header\">Welcome</div>\r\n          <div>\r\n              <mat-form-field style=\"width:100%;\">\r\n                  <input type=\"email\" formControlName=\"email\" matInput placeholder=\"Username\">\r\n              </mat-form-field>\r\n              <span *ngIf=\"isValid('email')\">Username cannot be blank</span>\r\n          </div>\r\n          <div>\r\n              <mat-form-field style=\"width:100%;\">\r\n                  <input type=\"password\" formControlName=\"password\" matInput placeholder=\"Password\">\r\n              </mat-form-field>\r\n              <span *ngIf=\"isValid('password')\">Password cannot be blank</span>\r\n          </div>\r\n          <div style=\"margin-top:40px;\">\r\n              <button class=\"form-btn\" (click)=\"login()\" >Sign In</button>\r\n          </div>\r\n      </form>\r\n  </div>\r\n\r\n  <div>\r\n      <div style=\"width: 290px; padding: 20px;\">\r\n          <button class=\"form-btn-hollow\" (click)=\"moveToRegister()\" >Register</button>\r\n      </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-main-desk',\r\n  templateUrl: './main-desk.component.html',\r\n  styleUrls: ['./main-desk.component.scss']\r\n})\r\nexport class MainDeskComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n  <div class=\"header\">\r\n    <div class=\"headerLogo\">Travelling World</div>\r\n  </div>\r\n\r\n  <div class=\"formarea\">\r\n    <router-outlet></router-outlet>\r\n  </div>\r\n</div>\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class MyserviceService {\r\n\r\n  constructor(private _http: HttpClient) { }\r\n\r\n  submitRegister(body: any){\r\n    return this._http.post('http://localhost:3000/users/register', body,{\r\n      observe: 'body'\r\n    })\r\n  }\r\n\r\n  login(body: any){\r\n    return this._http.post('http://localhost:3000/users/login', body,{\r\n      observe: 'body'\r\n    })\r\n  }\r\n\r\n  getUserName(){\r\n    return this._http.get('http://localhost:3000/users/username', {\r\n      observe: 'body',\r\n      params: new HttpParams().append('token', localStorage.getItem('token'))\r\n    })\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {\r\n  FormGroup,\r\n  FormControl,\r\n  Validators,\r\n  AbstractControl,\r\n} from '@angular/forms';\r\nimport { MyserviceService } from '../myservice.service';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.scss'],\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n  myForm: FormGroup;\r\n  successMessage: String = '';\r\n  constructor(\r\n    private _myservice: MyserviceService,\r\n    private _router: Router,\r\n    private _activatedRoute: ActivatedRoute\r\n  ) {\r\n    this.myForm = new FormGroup({\r\n      email: new FormControl(null, Validators.email),\r\n      name: new FormControl(null, Validators.required),\r\n      password: new FormControl(null, Validators.required),\r\n      cnfpass: new FormControl(null, this.passValidator),\r\n    });\r\n\r\n    this.myForm.controls.password.valueChanges.subscribe((x) =>\r\n      this.myForm.controls.cnfpass.updateValueAndValidity()\r\n    );\r\n  }\r\n\r\n  ngOnInit(): void {}\r\n\r\n  isValid(controlName) {\r\n    return (\r\n      this.myForm.get(controlName).invalid &&\r\n      this.myForm.get(controlName).touched\r\n    );\r\n  }\r\n\r\n  passValidator(control: AbstractControl) {\r\n    if (control && (control.value !== null || control.value !== undefined)) {\r\n      const cnfpassValue = control.value;\r\n\r\n      const passControl = control.root.get('password');\r\n      if (passControl) {\r\n        const passValue = passControl.value;\r\n        if (passValue !== cnfpassValue || passValue === '') {\r\n          return {\r\n            isError: true,\r\n          };\r\n        }\r\n      }\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  register() {\r\n    console.log(this.myForm.value);\r\n\r\n    if (this.myForm.valid) {\r\n      this._myservice.submitRegister(this.myForm.value).subscribe(\r\n        (data) => (this.successMessage = 'Registration Success'),\r\n        (error) => (this.successMessage = 'Some Error')\r\n      );\r\n    }\r\n  }\r\n\r\n  moveToLogin() {\r\n    this._router.navigate(['../login'], { relativeTo: this._activatedRoute });\r\n  }\r\n}\r\n","<div class=\"formcontainer\">\r\n  <div class=\"formbody\">\r\n      <form style=\"width:100%;\" [formGroup]=\"myForm\">\r\n          <div class=\"header\">Register</div>\r\n          <div>\r\n              <mat-form-field style=\"width:100%;\">\r\n                  <input type=\"text\" formControlName=\"email\" matInput placeholder=\"Email\" id=\"email\">\r\n              </mat-form-field>\r\n              <span *ngIf=\"isValid('email')\">Entered email is invalid</span>\r\n          </div>\r\n          <div>\r\n              <mat-form-field style=\"width:100%;\">\r\n                  <input type=\"text\" formControlName=\"name\" matInput placeholder=\"Username\" id=\"user\">\r\n              </mat-form-field>\r\n              <span *ngIf=\"isValid('name')\">Username is required</span>\r\n          </div>\r\n          <div>\r\n              <mat-form-field style=\"width:100%;\">\r\n                  <input type=\"password\" formControlName=\"password\" matInput placeholder=\"Password\" id=\"pass\">\r\n              </mat-form-field>\r\n              <span *ngIf=\"isValid('password')\">Password is a mandatory field</span>\r\n          </div>\r\n          <div>\r\n              <mat-form-field style=\"width:100%;\">\r\n                  <input type=\"password\" formControlName=\"cnfpass\" matInput placeholder=\"Re-enter Password\" id=\"cnfpass\">\r\n              </mat-form-field>\r\n              <span *ngIf=\"isValid('cnfpass')\">Password and confirm password should match</span>\r\n          </div>\r\n          <div style=\"margin-top:20px;\">\r\n              <button mat-button class=\"form-btn\" (click)=\"register()\" >Register</button>\r\n          </div>\r\n\r\n\r\n          <div style=\"text-align: center;\">\r\n              {{successMessage}}\r\n          </div>\r\n      </form>\r\n  </div>\r\n\r\n  <div>\r\n      <div style=\"width: 290px; padding: 20px;\">\r\n          <button class=\"form-btn-hollow\" (click)=\"moveToLogin()\" >Login</button>\r\n      </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { MyserviceService } from '../myservice.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-user-dashboard',\r\n  templateUrl: './user-dashboard.component.html',\r\n  styleUrls: ['./user-dashboard.component.scss']\r\n})\r\nexport class UserDashboardComponent implements OnInit {\r\n\r\n  username= '';\r\n  constructor(private _myservice: MyserviceService, private _router: Router) {\r\n    if(localStorage.getItem('token')==null){\r\n      this._router.navigate(['/main/login'])\r\n    }\r\n\r\n    this._myservice.getUserName().subscribe(\r\n      data => this.username = data.toString(),\r\n      error => this._router.navigate(['/main/login'])\r\n    )\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  logout(){\r\n    localStorage.removeItem('token')\r\n    this._router.navigate(['/main/login'])\r\n\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n  <div class=\"headerbar\">\r\n    <span>Travelling World</span>\r\n  </div>\r\n  <div class=\"boom\">\r\n    <h1>Hello {{username}}</h1> <h2>you have successfully logged in using JWT.</h2>\r\n\r\n    <button mat-raised-button color=\"primary\" (click)=\"logout()\" >Logout</button>\r\n  </div>\r\n</div>\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":"webpack:///"}